| KALE | Documentation.txt
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Writing to Console:
****************************************************************************
write: your string goes here

string variables can be written directly into the string
no escape characters are necessary

****************************************************************************
Variables:
****************************************************************************
All variable declarations are proceeded by the keyword var:, then followed by
type -- int:, bool:, or str:. Then the variable name is declared. They are always
proceeded by an underscore.

  Integers:
    var: int: _variableName = 54

  Booleans:
    var: bool: _variableName = True
    var: bool: _variableName2 = False
      Capitalize the first letter of the boolean, i.e. True and False

  Strings:
    var: str: _variableName = String here
****************************************************************************
Conditions:
****************************************************************************
If statements:
follow the syntax

if: conditional_here -> operation_performed_if_true

Conditionals are space delineated; logical operators are 'and', 'or', 'not',
without the apostrophes.

  if: 5 + 3 == 8 -> write: This evaluated to 'True'

  if: (5 + 3 != 8) or True -> write: This also evaluated to 'True'

These are both examples of statements that will fully execute.

  if: 5 + 3 != 8 -> write: This is False

The above statement, however, will not.
Variables may be written into both the condition and operation of a statement.
If statements may be nested; in other words, the operation_performed_if_true
may be another if statement.

****************************************************************************
User Input:
****************************************************************************
input is always stored in an explicitly declared variable; if the variable
has already been declared, redeclare it. The syntax is:

input: var: TYPE: variable_name = Prompt_Here:

Where TYPE: is either int: str: or bool:.

****************************************************************************
Math statements:
****************************************************************************
begin with keyword 'math: ' followed by variable syntax for an integer.
The variable should be equal to an equation --

math: var: int: _equation = 5 + 5

integer variables can be used in the statement.
operations include:
+	-	*	/	** (raises number to power i.e. 5 ** 2 = 25; 3 ** 3 = 27)

****************************************************************************
Loops:
****************************************************************************

for loops --

	for: 10 ->
	code block here
	END:
for loops only accept integer arguments; they can be variables though.

while loops --

	while: boolean evaluation ->
	code block
	END_LOOP:
while loops accept arguments that evaluate to either true or false
in the place marked 'boolean evaluation'.
****************************************************************************
                                       Created by: Clayton McCray


